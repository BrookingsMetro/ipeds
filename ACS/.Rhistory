makeCacheMatrix(matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3))
makeCacheMatrix(matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3))
makeCacheMatrix <- function(x = matrix()) {
m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
cacheSolve <- function(x=matrix(), ...) {
m<-x$getmatrix()
if(!is.null(m)){
message("getting cached data")
return(m)
}
matrix<-x$get
m<-solve(matrix, ...)
x$setmatrix(m)
m
}
makeCacheMatrix((matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3)))
a <- makeCacheMatrix((matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3)))
a$getmatrix()
a <- makeCacheMatrix((matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3)))
a$setmatrix()
makeCacheMatrix <- function(x = matrix()) {
m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
cacheSolve <- function(x=matrix(), ...) {
m<-x$getmatrix()
if(!is.null(m)){
message("getting cached data")
return(m)
}
matrix<-x$get()
m<-solve(matrix, ...)
x$setmatrix(m)
m
}
a <- makeCacheMatrix((matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3)))
a$setmatrix()
a$getmatrix()
a$get()
cachesolve(a)
cacheSolve(a)
a <- makeCacheMatrix((matrix(c(2,5,16,12,6,23,5,61,5), nrow=3, ncol=3)))
cacheSolve(a)
makeCacheMatrix <- function (x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmatrix <- function(mean) m <<- mean
getmatrix <- function() m
list (set = set, get = get,
setmatrix = setmatrix,
getmatrix = getmatrix)
}
cacheSolve <- function(x, ...) {
m <- x$getmatrix()
if(!is.null(m)) {
message("getting cached matrix")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setmatrix(m)
m
}
cacheSolve(a)
makeCacheMatrix <- function (x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmatrix <- function(mean) m <<- mean
getmatrix <- function() m
list (set = set, get = get,
setmatrix = setmatrix,
getmatrix = getmatrix)
}
a <- makeCacheMatrix((matrix(c(2,5,16,12,6,23,5,61,5), nrow=3, ncol=3)))
a$getmatrix
a$getmatrix()
a$get()
install.packages("swirl")
library("swirl")
library("swirl")
install.packages("swirl")
library("swirl")
ls
swirl()
library('swirl')
rm(list=ls())
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flag$animate)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
str(flags)
tapply(flags$population,flags$landmass,summary)
x <- rnorm(10)
x
x <- rnorm(10,20,2)
x
summary(x)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100,0,2)
y <- 0.5 + 2 * x + e
y
summary(y)
plot(x,y)
x <- rbinom(100,1,0.5)
e <- rnorm(100,0,2)
y <- 0.5 + 2 * x + e
plot(x,y)
letters
install.packages("httr")
library("httr")
library('httr')
oauth_endpoints('github')
#Client ID
client_ID = 'b95b39f1ab2b589438c9'
#Client Secret
client_secret = '18689182428d93358ad183717335ea4fbe894433'
myapp <- oauth_app('github', key = client_ID, secret = client_secret)
github_token <- oauth2.0_token(oauth_endpoint('github'), myapp)
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
myapp <- oauth_app('github', key = client_ID, secret = client_secret)
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
install.packages("httpuv")
install.packages("XML")
library("httpuv")
library("XML")
client_ID = 'b95b39f1ab2b589438c9'
#Client Secret
client_secret = '18689182428d93358ad183717335ea4fbe894433'
oauth_endpoints('github')
myapp <- oauth_app('github', key = client_ID, secret = client_secret)
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
install.packages("sqldf")
library("sqldf")
install.packages("sqldf")
library("sqldf")
acs <- read.csv(file="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
df <- sqldf("select pwgtp1 from acs where AGEP < 50")
library("sqldf")
df <- sqldf("select pwgtp1 from acs where AGEP < 50")
library("sqldf")
install.packages("sqldf")
library("sqldf")
library("sqldf")
install.packages("sqldf")
install.packages("RSQLite")
install.packages("RSQLite")
install.packages("RSQLite")
install.packages("sqldf")
library("RSQLite")
install.packages("sqldf")
library("RSQLite")
library("sqldf")
df <- sqldf("select pwgtp1 from acs where AGEP < 50")
options(sqldf.driver = "SQLite") # as per FAQ #7 force SQLite
options(gsubfn.engine = "R") # as per FAQ #5 use R code rather than tcltk
library(RMySQL)
library(sqldf)
options(sqldf.driver = "SQLite") # as per FAQ #7 force SQLite
options(gsubfn.engine = "R") # as per FAQ #5 use R code rather than tcltk
library(sqldf)
library('RMySQL')
library('sqldf')
library("Cairo")
library("maps")
library("mapproj")
library("geosphere")
map("Tennessee", projection = "polyconic", fill=TRUE, col="#D3D3D3")
map("State","Tennessee", projection = "polyconic", fill=TRUE, col="#D3D3D3")
map("State","CA", projection = "polyconic", fill=TRUE, col="#D3D3D3")
library("maps")
library("mapproj")
library("geosphere")
library("Cairo")
map("State","CA", projection = "polyconic", fill=TRUE, col="#D3D3D3")
map("CA", projection = "polyconic", fill=TRUE, col="#D3D3D3")
map(state="CA", projection = "polyconic", fill=TRUE, col="#D3D3D3")
map("California", projection = "polyconic", fill=TRUE, col="#D3D3D3")
map("Nevada", fill=TRUE)
map('state', 'iowa', fill=TRUE, col=BLUE)
map('state', 'iowa', fill=TRUE, col='BLUE')
map('state', 'TN', fill=TRUE, col="#D3D3D3")
map('state', 'TN', fill=TRUE, col="#D3D3D3")
map('state', 'Tennessee', fill=TRUE, col="#D3D3D3")
Cairo(file="C:/Users/SKulkarni/Desktop/TN.png", type="png")
map('state', 'Tennessee', fill=TRUE, col="#D3D3D3")
dev.off()
library("Cairo")
library("maps")
library("mapproj")
library("geosphere")
map("county", "Tennessee",  projection = "polyconic", fill=TRUE, col="#D3D3D3")
map("county", "Tennessee", "Georgia", "Kentucky", "Alabama",  projection = "polyconic", fill=TRUE, col="#D3D3D3")
map("county", c("Tennessee", "Georgia", "Kentucky", "Alabama"),  projection = "polyconic", fill=TRUE, col="#D3D3D3")
map("county", c("Tennessee", "Georgia", "Kentucky", "Alabama"),  projection = "polyconic", fill=TRUE, col=white
map("county", c("Tennessee", "Georgia", "Kentucky", "Alabama"),  projection = "polyconic", fill=TRUE, col=white)
map("county", c("Tennessee", "Georgia", "Kentucky", "Alabama"),  projection = "polyconic", fill=TRUE, col=white)
map("county", c("Tennessee", "Georgia", "Kentucky", "Alabama"),  projection = "polyconic", fill=TRUE, color='white')
map("county", c("Tennessee", "Georgia", "Kentucky", "Alabama"),  projection = "polyconic", fill=TRUE, col="#ffffff")
map("county", c("Tennessee", "Georgia", "Kentucky", "Alabama"),  projection = "polyconic", fill=TRUE, col="#ffffff", bg='transparent')
Cairo(file="C:/Users/SKulkarni/Desktop/test.png", type="png")
map("county", c("Tennessee", "Georgia", "Kentucky", "Alabama"),  projection = "polyconic", fill=TRUE, col="#ffffff", bg='transparent')
dev.off()
library("Cairo")
library("maps")
library("mapproj")
library("geosphere")
Cairo(file="C:/Users/SKulkarni/Desktop/test.png", type="png")
map("state", c("PA"),  projection = "polyconic", fill=TRUE, col="#ffffff", bg='transparent')
dev.off()
Cairo(file="C:/Users/SKulkarni/Desktop/test.png", type="png")
map("state", "PA",  projection = "polyconic", fill=TRUE, col="#ffffff", bg='transparent')
dev.off()
Cairo(file="C:/Users/SKulkarni/Desktop/test.png", type="png")
map("state", "Pennsylvania",  projection = "polyconic", fill=TRUE, col="#ffffff", bg='transparent')
dev.off()
Cairo(file="C:/Users/SKulkarni/Desktop/test.png", type="png")
map("state", "Pennsylvania",  projection = "polyconic", fill=TRUE, col="light grey", bg='transparent')
dev.off()
library('scales')
library('ggmap')
library('Cairo')
library('dplyr')
library('ggplot2')
library('rgeos')
library('rgdal')
library('maptools')
library('Rcpp')
#Reading in the shape file and using fortify to get it into the right R frame
county <- readOGR(dsn="V:\\Maps\\CountyShapefile", layer='cb_2014_us_county_500k')
county <- fortify(county, region='GEOID')
View(county)
county <- filter(county, id==c(24033,51013,51043,51047,51059,51061,51107,51154))
View(county)
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map() + theme_nothing()
getwd()
ggsave(map, 'dc_counties.png')
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map() + theme_nothing()
ggsave(map, 'dc_counties.png')
ggsave(map, file='dc_counties.png')
#Reading in the shape file and using fortify to get it into the right R frame
county <- readOGR(dsn="V:\\Maps\\CountyShapefile", layer='cb_2014_us_county_500k')
county <- fortify(county, region='GEOID')
#DC Metro
county$county substr(county$id,)
county <- filter(county, county)
county <- filter(county, id==c(24033,51013,51043,51047,51059,51061,51107,51154,11001))
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map() + theme_nothing()
ggsave(map, file='dc_counties.png')
county <- readOGR(dsn="V:\\Maps\\CountyShapefile", layer='cb_2014_us_county_500k')
county <- fortify(county, region='GEOID')
#DC Metro
county$county substr(county$id,)
county <- filter(county, county)
county <- filter(county, id==c(11001,24009,24017,24021,24031,24033,51013,51043,51047,51059,51061,51107,51153,51177,51170,51187,51510,51600,51610,51630,51683,51685,54037))
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map() + theme_nothing()
ggsave(map, file='dc_counties.png')
#Reading in the shape file and using fortify to get it into the right R frame
county <- readOGR(dsn="V:\\Maps\\CountyShapefile", layer='cb_2014_us_county_500k')
county <- fortify(county, region='GEOID')
#DC Metro
county$county substr(county$id,)
county <- filter(county, county)
View(county)
county <- filter(county, id==c(11001,24009,24017,24021,24031,24033,51013,51043,51047,51059,51061,51107,51153,51177,51170,51187,51510,51600,51610,51630,51683,51685,54037))
View(county)
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + theme_nothing()
ggsave(map, file='dc_counties.png')
View(county)
View(county)
county <- readOGR(dsn="V:\\Maps\\CountyShapefile", layer='cb_2014_us_county_500k')
county <- fortify(county, region='GEOID')
#DC Metro
county$county substr(county$id,)
#county <- filter(county, id==c(11001,24009,24017,24021,24031,24033,51013,51043,51047,51059,51061,51107,51153,51177,51170,51187,51510,51600,51610,51630,51683,51685,54037))
county$state <- substr(county$id,1,2)
county <- filter(county, state==c(11,24,51,54))
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + theme_nothing()
ggsave(map, file='dc_counties.png')
fix(map)
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map + theme_nothing()
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map() + theme_nothing()
ggsave(map, file='dc_counties.png')
county <- readOGR(dsn="V:\\Maps\\CountyShapefile", layer='cb_2014_us_county_500k')
county <- fortify(county, region='GEOID')
#DC Metro
county$county substr(county$id,)
county <- filter(county, id==c(11001,24009,24017,24021,24031,24033,51013,51043,51047,51059,51061,51107,51153,51177,51170,51187,51510,51600,51610,51630,51683,51685,54037))
#county$state <- substr(county$id,1,2)
#county <- filter(county, state==c(11,24,51,54))
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map() + theme_nothing()
ggsave(map, file='dc_counties.png')
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + theme_nothing()
ggsave(map, file='dc_counties.png')
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
ggsave(map, file='dc_counties.png')
map <- ggplot() + geom_polygon(data=county, aes(fill='light grey'), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
ggsave(map, file='dc_counties.png')
map <- ggplot() + geom_polygon(data=county, aes(fill='light grey'), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
View(county)
View(county)
county <- select(county, long, lat, group, id)
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
ggsave(map, file='dc_counties.png')
map <- ggplot(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
ggsave(map, file='dc_counties.png')
map <- ggplot(county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
ggsave(map, file='dc_counties.png')
map <- ggplot(county, aes(x=long, y=lat, group=group) +geom_polygon(aes(fill=light grey)), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
map <- ggplot(county, aes(x=long, y=lat, group=group) +geom_polygon( aes(fill='light grey')), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
map <- ggplot(county, aes(x=long, y=lat, group=group) +geom_polygon( aes()), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
map <- ggplot(county, aes(x=long, y=lat, group=group) +geom_polygon(aes(), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
ggsave(map, file='dc_counties.png')
map <- ggplot(county, aes(x=long, y=lat, group=group) +geom_polygon(aes(), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
map <- ggplot(county, aes(x=long, y=lat, group=group)) +geom_polygon(aes(), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
map <- ggplot(county, aes(x=long, y=lat, group=group)) +geom_polygon(aes(), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
ggsave(map, file='dc_counties.png')
county <- readOGR(dsn="V:\\Maps\\CountyShapefile", layer='cb_2014_us_county_500k')
county <- fortify(county, region='GEOID')
qmap(county, zoom=6) +
geom_polygon(aes(x=long, y=lat, group=group),
color= 'light grey', alpha=.5,
data=subset(county, id %in% c(11001,24009,24017,24021,24031,24033,51013,51043,51047,51059,51061,51107,51153,51177,51170,51187,51510,51600,51610,51630,51683,51685,54037))
)
qmap(county, zoom=6) +
geom_polygon(aes(x=long, y=lat, group=group),
color= 'light grey', alpha=.5,
data=subset(county, id %in% c(11001,24009,24017,24021,24031,24033,51013,51043,51047,51059,51061,51107,51153,51177,51170,51187,51510,51600,51610,51630,51683,51685,54037))
)
?get_map
county_map = map_data(map='county')
qmap(county_map, zoom=6) +
geom_polygon(aes(x=long, y=lat, group=group),
color= 'light grey', alpha=.5,
data=subset(county, id %in% c(11001,24009,24017,24021,24031,24033,51013,51043,51047,51059,51061,51107,51153,51177,51170,51187,51510,51600,51610,51630,51683,51685,54037))
)
View(county_map)
View(county_map)
county_map = map_data(map='county', region=c('virginia','maryland','west virginia','district of columbia'))
View(county_map)
county_map = map_data(map='county', region=c('virginia','maryland','west virginia','district of columbia'), subregion=c('washington','calvert','charles','frederick','montgomery')
county_map = map_data(map='county', region=c('virginia','maryland','west virginia','district of columbia'), subregion=c('washington','calvert','charles','frederick','montgomery'))
county_map = map_data(map='county', region=c('virginia','maryland','west virginia','district of columbia'), subregion=c('washington','calvert','charles','frederick','montgomery'))
View(county_map)
View(county_map)
county_map = filter(county_map,subregion=c('washington','calvert','charles','frederick','montgomery'))
county_map = filter(county_map,subregion==c('washington','calvert','charles','frederick','montgomery'))
county_map = filter(county_map,subregion %in% c('washington','calvert','charles','frederick','montgomery'))
county_map = map_data(map='county', region=c('virginia','maryland','west virginia','district of columbia'), subregion=c('washington','calvert','charles','frederick','montgomery'))
county_map = filter(county_map,subregion %in% c('washington','calvert','charles','frederick','montgomery'))
View(county_map)
county <- readOGR(dsn="V:\\Maps\\CountyShapefile", layer='cb_2014_us_county_500k')
county <- fortify(county, region='GEOID')
#DC Metro
county$county substr(county$id,)
county <- filter(county, id%in%c(11001,24009,24017,24021,24031,24033,51013,51043,51047,51059,51061,51107,51153,51177,51170,51187,51510,51600,51610,51630,51683,51685,54037))
map <- ggplot() +geom_polygon(county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + coord_equal() + theme_nothing()
map
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map() +  theme_nothing()
map
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') +  theme_nothing()
map
ggsave(map, file='dc_counties.png')
ggsave(map, file='dc_counties.png', device=cairo_ps)
ggsave(map, file='dc_counties.png')
library('scales')
library('ggmap')
library('Cairo')
library('dplyr')
library('ggplot2')
library('rgeos')
library('rgdal')
library('maptools')
library('Rcpp')
#Reading in the shape file and using fortify to get it into the right R frame
county <- readOGR(dsn="V:\\Maps\\CountyShapefile", layer='cb_2014_us_county_500k')
county <- fortify(county, region='GEOID')
#DC Metro
county$county substr(county$id,)
county <- filter(county, id%in%c(11001,24009,24017,24021,24031,24033,51013,51043,51047,51059,51061,51107,51153,51177,51179,51170,51187,51510,51600,51610,51630,51683,51685,54037))
#county$state <- substr(county$id,1,2)
#county <- filter(county, state==c(11,24,51,54))
county <- select(county, long, lat, group, id)
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') +  theme_nothing()
ggsave(map, file='dc_counties.svg')
range(county$latitude)
range(county$lat)
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + scale_y_continuous(limits=c(37.8,39.8))  theme_nothing()
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + scale_y_continuous(limits=c(37.8,39.8)) +  theme_nothing()
map
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + scale_y_continuous(limits=c(37.8,39.9)) +  theme_nothing()
map
ggsave(map, file='dc_counties.svg', width=8, height=10, type='cairo-svg'))
ggsave(map, file='dc_counties.svg', width=8, height=10, type='cairo-svg')
ggsave(map, file='dc_counties.svg', width=8, height=10)
map <- ggplot() + geom_polygon(data=county, aes(x=long, y=lat, group=group), fill='light grey', color='white', size=0.25) + coord_map('polyconic') + scale_y_continuous(limits=c(37.8,40)) +  theme_nothing()
map
install.packages('httr')
library(httr)
test <- GET('http://api.census.gov/data/2014/acs1?get=NAME,B15010_001E&for=state:*&key=3a6a31e5e9739d354bc99907b46aac3274304332')
content(test)
df <- as.data.frame(content(test))
httr?
?
??
httr?
?
??
httr?
?
httr?
?
??
dfafkal
lketkejatkljea
httr?
dkfjafa
?httr
content(test)
as.json(content(test))
library(jsonlite)
library(rcurl)
library(RCurl)
install.packages('RCurl')
library(RCurl)
fromJSON(getURL('http://api.census.gov/data/2014/acs1?get=NAME,B15010_001E&for=state:*&key=3a6a31e5e9739d354bc99907b46aac3274304332'))
test <- fromJSON(getURL('http://api.census.gov/data/2014/acs1?get=NAME,B15010_001E&for=state:*&key=3a6a31e5e9739d354bc99907b46aac3274304332'))
test <- as.data.frame(fromJSON(getURL('http://api.census.gov/data/2014/acs1?get=NAME,B15010_001E&for=state:*&key=3a6a31e5e9739d354bc99907b46aac3274304332')))
head(test)
test[1]
test[0,1]
test[1,0]
test[0,1]
test[0]
test[1]
test[2]
test[1,3]
test[1,]
as.list <- test[1,]
as.list(test[1,])
library(dplyr)
install.packages('dplyr')
library(dplyr)
library(httr)
library(jsonlite)
library(RCurl)
library(dplyr)
key = '3a6a31e5e9739d354bc99907b46aac3274304332'
setwd("V:\\IPEDS\\Code\\ipeds\\ACS")
acs <- read.csv('acsFieldOfDegree.csv', stringsAsFactors = FALSE)
acs <- filter(acs, descType %in% c('stem','total'))
year <- c(2012,2013,2014)
acsSTEM <- data.frame()
for (i in 1:length(acs)){
varName <- acs[i,1]
url <- paste0('http://api.census.gov/data/',2014,'/acs1?get=NAME,',acs[i,1],'&for=state:*&key=',key)
state <- as.data.frame(fromJSON(getURL(url)))
state <- state[-1,]
names(state) <- c('geoName','value','FIPS')
state$year <- 2014
state$varName <- varName
url <- paste0('http://api.census.gov/data/',2014,'/acs1?get=NAME,',acs[i,1],'&for=metropolitan+statistical+area/micropolitan+statistical+area:*&key=',key)
metro <- as.data.frame(fromJSON(getURL(url)))
metro <- metro[-1,]
names(metro) <- c('geoName','value','FIPS')
metro$year <- 2014
metro$varName <- varName
acsSTEM <- rbind(acsSTEM,state,metro)
}
view(acsSTEM)
View(acsSTEM)
